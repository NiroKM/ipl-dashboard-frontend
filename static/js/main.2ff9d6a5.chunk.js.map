{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","services/TeamService.js","components/CutomPieChart.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","match","teamName","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TEAM_BASE_URL","getTeamData","fetch","year","CustomPieChart","wins","losses","total","winPerc","toFixed","losPerc","data","title","value","color","label","item","dataEntry","labelStyle","fontSize","fill","fontFamily","fontWeight","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","teamService","response","json","fetchData","totalWins","totalMatches","slice","map","id","YearSelector","matchYears","process","push","matchYear","MatchPage","setMatches","TeamService","getMatchDataForYear","length","TeamTile","HomePage","teams","setTeams","getAllTeamData","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yaAKaA,EAAkB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACrC,IAAKD,EAAO,OAAO,KAEnB,IAAME,EAAYF,EAAMG,QAAUF,EAAWD,EAAMI,MAAQJ,EAAMG,MAC3DE,EAAc,iBAAaH,GAC3BI,EAAaL,IAAaD,EAAMO,YAEtC,OACI,sBAAKC,UAAWF,EAAa,2BAA6B,4BAA1D,UACI,gCACI,sBAAME,UAAU,KAAhB,gBACA,6BAAI,cAAC,IAAD,CAAMC,GAAIJ,EAAV,SAA2BH,MAC/B,oBAAIM,UAAU,aAAd,SAA4BR,EAAMU,OAClC,qBAAIF,UAAU,cAAd,gBAAgCR,EAAMW,SACtC,qBAAIH,UAAU,eAAd,UAA8BR,EAAMO,YAApC,WAAyDP,EAAMY,aAA/D,IAA8EZ,EAAMa,aAExF,sBAAKL,UAAU,qBAAf,UACI,+CACA,4BAAIR,EAAMG,QACV,gDACA,4BAAIH,EAAMI,QACV,kDACA,4BAAIJ,EAAMc,gBACV,+CACA,8BAAId,EAAMe,QAAV,MAAsBf,EAAMgB,kBCxB/BC,G,MAAiB,SAAC,GAAyB,IAAvBjB,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAE9BC,EAAYF,EAAMG,QAAUF,EAAWD,EAAMI,MAAQJ,EAAMG,MAC3DE,EAAc,iBAAaH,GAC3BI,EAAaL,IAAaD,EAAMO,YAEtC,OACI,sBAAKC,UAAWF,EAAa,0BAA4B,2BAAzD,UACI,sBAAME,UAAU,KAAhB,gBACA,6BAAI,cAAC,IAAD,CAAMC,GAAIJ,EAAV,SAA2BH,MAC/B,oBAAGM,UAAU,eAAb,UAA6BR,EAAMO,YAAnC,WAAwDP,EAAMY,aAA9D,IAA6EZ,EAAMa,e,gBCdzFK,EAAgB,6CAiBP,M,iDATXC,YAAc,SAAClB,GACX,OAAOmB,MAAMF,EAAcjB,I,kDAL/B,WACI,OAAOmB,MAAMF,K,iCAOjB,SAAoBjB,EAASoB,GACzB,OAAOD,MAAMF,EAAcjB,EAAS,iBAAiBoB,O,8BCXhDC,EAAiB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAG7BC,EAAQF,EAAOC,EACfE,GAAYH,EAAOE,EAAS,KAAKE,QAAQ,GACzCC,GAAYJ,EAASC,EAAS,KAAKE,QAAQ,GAEjD,OACI,8BACI,cAAC,WAAD,CACIE,KAAM,CACF,CAAEC,MAAM,GAAD,OAAKJ,EAAL,KAAiBK,MAAOP,EAAQQ,MAAO,WAC9C,CAAEF,MAAM,GAAD,OAAKF,EAAL,KAAiBG,MAAOR,EAAMS,MAAO,YAEhDC,MAAO,SAACC,GACJ,OACIA,EAAKC,UAAUL,OAIvBM,WACI,CACIC,SAAU,MACVC,KAAM,QACNC,WAAY,QACZC,WAAY,YClBvBC,EAAW,WAEpB,MAAwBC,mBAAS,CAAEC,QAAS,KAA5C,mBAAOC,EAAP,KAAaC,EAAb,KAEQ5C,EAAa6C,cAAb7C,SAER8C,qBAAU,WAQN,OAPe,uCAAG,8BAAAC,EAAA,sEACSC,EAAY9B,YAAYlB,GADjC,cACRiD,EADQ,gBAEKA,EAASC,OAFd,OAERtB,EAFQ,OAGdgB,EAAQhB,GAHM,2CAAH,oDAKfuB,GAEO,WACHP,EAAQ,CAAEF,QAAS,QAGxB,CAAC1C,IAEJ,IAAMsB,EAAOqB,EAAKS,UACZ7B,EAASoB,EAAKU,aAAe/B,EAEnC,OAAKqB,GAASA,EAAK3C,SAKf,sBAAKO,UAAU,WAAf,UACI,sBAAKA,UAAU,cAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,SAAa,sBAAKD,UAAU,mBAAf,UAAkC,cAAC,IAAD,CAAaA,UAAU,uBAAzD,kBACb,oBAAIA,UAAU,aAAd,SAA4BoC,EAAK3C,cAErC,sBAAKO,UAAU,mBAAf,UACI,yCACA,cAAC,EAAD,CAAgBe,KAAMA,EAAMC,OAAQA,IACpC,sBAAKhB,UAAU,iBAAf,UACI,gCAAK,qBAAKA,UAAU,sBAAf,eAA4C,wCACjD,gCAAK,qBAAKA,UAAU,uBAAf,eAA6C,gDAI1D,sBAAKA,UAAU,uBAAf,UACI,gDACA,cAAC,EAAD,CAAiBP,SAAU2C,EAAK3C,SAAUD,MAAO4C,EAAKD,QAAQ,QAG9DC,EAAKD,QAAQY,MAAM,GAAGC,KAAI,SAAAxD,GAAK,OAAI,cAAC,EAAD,CAA+BC,SAAU2C,EAAK3C,SAAUD,MAAOA,GAA1CA,EAAMyD,OAElE,qBAAKjD,UAAU,YAAf,SACI,eAAC,IAAD,CAAMC,GAAE,iBAAYR,EAAZ,iBAAR,kBAAkD,cAAC,IAAD,CAAiBO,UAAU,sBA1B9E,MC7BFkD,G,MAAe,SAAC,GAMzB,IAN2C,IAAhBzD,EAAe,EAAfA,SAEvB0D,EAAa,GAIRtC,EAHOuC,OAGWvC,GAFbuC,OAE8BvC,IACxCsC,EAAWE,KAAKxC,GAGpB,OACI,sBAAKb,UAAU,eAAf,UACI,6CACA,6BAEQmD,EAAWH,KAAI,SAAAM,GAAS,OACpB,6BACI,cAAC,IAAD,CAAMrD,GAAE,iBAAYR,EAAZ,oBAAgC6D,GAAxC,SACI,wBAAQtD,UAAU,cAAlB,SAAiCsD,OAFhCA,aCbpBC,G,MAAY,WAErB,MAA8BrB,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBqB,EAAhB,KACA,EAA2BlB,cAAnB7C,EAAR,EAAQA,SAAUoB,EAAlB,EAAkBA,KAgBlB,OAdA0B,qBAAU,WAQN,OAPe,uCAAG,8BAAAC,EAAA,sEACSiB,EAAYC,oBAAoBjE,EAAUoB,GADnD,cACR6B,EADQ,gBAEKA,EAASC,OAFd,OAERtB,EAFQ,OAGdmC,EAAWnC,GAHG,2CAAH,oDAKfuB,GAEO,WACHY,EAAW,OAGhB,CAAC/D,EAAUoB,IAGV,sBAAKb,UAAU,YAAf,UACI,qBAAKA,UAAU,cAAf,SACI,cAAC,EAAD,CAAcP,SAAUA,MAE5B,gCACI,oBAAIO,UAAU,kBAAd,mBAAoCP,EAApC,6BAAiEoB,KAC7C,IAAnBsB,EAAQwB,OACL,sBAAK3D,UAAU,eAAf,mCAAiDa,GAAjD,OAEIsB,EAAQa,KAAI,SAAAxD,GAAK,OAAI,cAAC,EAAD,CAAgCC,SAAUA,EAAUD,MAAOA,GAArCA,EAAMyD,eCjC5DW,G,MAAW,SAAC,GAAgB,IAAfnE,EAAc,EAAdA,SACtB,OACI,cAAC,IAAD,CAAMQ,GAAE,iBAAYR,GAApB,SACI,qBAAKO,UAAU,WAAf,SACI,6BAAKP,UCHRoE,G,MAAW,WAEpB,MAAyB3B,mBAAS,IAAlC,mBAAO4B,EAAP,KAAaC,EAAb,KAeA,OAbAxB,qBAAU,WAQN,OAPe,uCAAE,8BAAAC,EAAA,sEACUiB,EAAYO,iBADtB,cACPtB,EADO,gBAEMA,EAASC,OAFf,OAEPtB,EAFO,OAGb0C,EAAS1C,GAHI,2CAAF,oDAKfuB,GAEO,WACHmB,EAAS,OAEf,IAGE,sBAAK/D,UAAU,WAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,iDAEJ,qBAAKA,UAAU,YAAf,SAEI8D,EAAMd,KAAI,SAAAZ,GAAI,OACV,cAAC,EAAD,CAAwB3C,SAAU2C,EAAK3C,UAAxB2C,EAAKa,cCVzBgB,MAdf,WACE,OACE,qBAAKjE,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkE,KAAK,iCAAiCC,UAAWZ,IACxD,cAAC,IAAD,CAAOW,KAAK,mBAAmBC,UAAWlC,IAC1C,cAAC,IAAD,CAAOiC,KAAK,IAAIC,UAAWN,YCDtBO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2ff9d6a5.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport \"./MatchDetailCard.scss\"\r\n\r\n\r\nexport const MatchDetailCard = ({ match, teamName }) => {\r\n    if (!match) return null\r\n\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1\r\n    const otherTeamRoute = `/teams/${otherTeam}`\r\n    const isMatchWon = teamName === match.matchWinner\r\n     \r\n    return (\r\n        <div className={isMatchWon ? \"MatchDetailCard won-card\" : \"MatchDetailCard lost-card\"}>\r\n            <div>\r\n                <span className=\"vs\">vs</span>\r\n                <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\r\n                <h2 className=\"match-date\">{match.date}</h2>\r\n                <h3 className=\"match-venue\">at {match.venue}</h3>\r\n                <h3 className=\"match-winner\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\r\n            </div>\r\n            <div className=\"additional-details\">\r\n                <h3>First Innings</h3>\r\n                <p>{match.team1}</p>\r\n                <h3>Second Innings</h3>\r\n                <p>{match.team2}</p>\r\n                <h3>Man of the Match</h3>\r\n                <p>{match.playerOfMatch}</p>\r\n                <h3>Match Umpires</h3>\r\n                <p>{match.umpire1} , {match.umpire2}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport \"./MatchSmallCard.scss\"\r\n\r\n\r\nexport const MatchSmallCard = ({ match, teamName }) => {\r\n\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1\r\n    const otherTeamRoute = `/teams/${otherTeam}`\r\n    const isMatchWon = teamName === match.matchWinner\r\n\r\n    return (\r\n        <div className={isMatchWon ? \"MatchSmallCard won-card\" : \"MatchSmallCard lost-card\"}>\r\n            <span className=\"vs\">vs</span>\r\n            <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\r\n            <p className=\"match-winner\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nconst TEAM_BASE_URL = \"https://ipl-spring-app.herokuapp.com/team/\"\r\n\r\nclass TeamService {\r\n\r\n    getAllTeamData(){\r\n        return fetch(TEAM_BASE_URL)\r\n    }\r\n\r\n    getTeamData = (teamName) => {\r\n        return fetch(TEAM_BASE_URL+teamName)\r\n    }\r\n\r\n    getMatchDataForYear(teamName,year){\r\n        return fetch(TEAM_BASE_URL+teamName+'/matches?year='+year)\r\n    }\r\n}\r\n\r\nexport default new TeamService()","import React from 'react'\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\n\r\nexport const CustomPieChart = ({ wins, losses }) => {\r\n\r\n\r\n    const total = wins + losses\r\n    const winPerc = ((wins / total) * 100).toFixed(1)\r\n    const losPerc = ((losses / total) * 100).toFixed(1)\r\n\r\n    return (\r\n        <div>\r\n            <PieChart\r\n                data={[\r\n                    { title: `${winPerc}%`, value: losses, color: '#C43B52' },\r\n                    { title: `${losPerc}%`, value: wins, color: '#138340' },\r\n                ]}\r\n                label={(item) => {\r\n                    return (\r\n                        item.dataEntry.title\r\n                    );\r\n\r\n                }}\r\n                labelStyle={\r\n                    {\r\n                        fontSize: \"8px\",\r\n                        fill: 'white',\r\n                        fontFamily: 'Rubik',\r\n                        fontWeight: \"700\",\r\n                    }\r\n                }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { MatchDetailCard } from '../components/MatchDetailCard'\r\nimport { MatchSmallCard } from '../components/MatchSmallCard'\r\nimport teamService from '../services/TeamService'\r\nimport './TeamPage.scss';\r\nimport { BiRightArrowAlt } from \"react-icons/bi\";\r\nimport { CustomPieChart } from '../components/CutomPieChart'\r\nimport { BiArrowBack } from \"react-icons/bi\";\r\n\r\nexport const TeamPage = () => {\r\n\r\n    const [team, setTeam] = useState({ matches: [] })\r\n\r\n    const { teamName } = useParams()\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response = await teamService.getTeamData(teamName);\r\n            const data = await response.json()\r\n            setTeam(data)\r\n        }\r\n        fetchData()\r\n\r\n        return () => {\r\n            setTeam({ matches: [] })\r\n        }\r\n\r\n    }, [teamName])\r\n\r\n    const wins = team.totalWins\r\n    const losses = team.totalMatches - wins\r\n\r\n    if (!team || !team.teamName) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"TeamPage\">\r\n            <div className=\"team-header\">\r\n                <Link to=\"/\"><div className=\"home-page-button\"><BiArrowBack className=\"homepage-link-icon\" /> Home Page</div></Link>\r\n                <h1 className=\"team-title\">{team.teamName}</h1>\r\n            </div>\r\n            <div className=\"win-loss-section\">\r\n                <p>Win/Loss</p>\r\n                <CustomPieChart wins={wins} losses={losses} />\r\n                <div className=\"property-title\">\r\n                    <div><div className=\"color-box win-Color\"> </div><p>Wins</p></div>\r\n                    <div><div className=\"color-box loss-Color\"> </div><p>Losses</p></div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"match-detail-section\">\r\n                <h2>Latest Matches</h2>\r\n                <MatchDetailCard teamName={team.teamName} match={team.matches[0]} />\r\n            </div>\r\n            {\r\n                team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match={match} />)\r\n            }\r\n            <div className=\"more-link\">\r\n                <Link to={`/teams/${teamName}/matches/2020`}>More <BiRightArrowAlt className=\"link-icon\" /></Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport \"./YearSelector.scss\"\r\n\r\n\r\nexport const YearSelector = ({ teamName }) => {\r\n\r\n    let matchYears = [];\r\n    let startYear = process.env.REACT_APP_DATA_START_YEAR\r\n    let endYear = process.env.REACT_APP_DATA_END_YEAR\r\n\r\n    for (let year = startYear; year <= endYear; year++) {\r\n        matchYears.push(year)\r\n    }\r\n\r\n    return (\r\n        <div className=\"YearSelector\">\r\n            <h3>Select Year</h3>\r\n            <ul>\r\n                {\r\n                    matchYears.map(matchYear => (\r\n                        <li key={matchYear}>\r\n                            <Link to={`/teams/${teamName}/matches/${matchYear}`}>\r\n                                <button className=\"year-button\">{matchYear}</button>\r\n                            </Link>\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { MatchDetailCard } from '../components/MatchDetailCard'\r\nimport { YearSelector } from '../components/YearSelector'\r\nimport TeamService from '../services/TeamService'\r\nimport './MatchPage.scss'\r\n\r\n\r\nexport const MatchPage = () => {\r\n\r\n    const [matches, setMatches] = useState([])\r\n    const { teamName, year } = useParams();\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response = await TeamService.getMatchDataForYear(teamName, year)\r\n            const data = await response.json()\r\n            setMatches(data)\r\n        }\r\n        fetchData()\r\n\r\n        return ()=>{\r\n            setMatches([])\r\n        }\r\n\r\n    }, [teamName, year])\r\n\r\n    return (\r\n        <div className=\"MatchPage\">\r\n            <div className=\"year-select\">\r\n                <YearSelector teamName={teamName} />\r\n            </div>\r\n            <div>\r\n                <h1 className=\"matchPage-title\">{`${teamName} matches for year ${year}`}</h1>\r\n                {matches.length === 0 ?\r\n                    <div className=\"no-match-div\">{`No Matches for ${year}`} </div>\r\n                    : (\r\n                        matches.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match} />)\r\n\r\n                    )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './TeamTile.scss'\r\n\r\nexport const TeamTile = ({teamName}) => {\r\n    return (\r\n        <Link to={`/teams/${teamName}`}>\r\n            <div className=\"TeamTile\">\r\n                <h2>{teamName}</h2>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n","import React,{useState,useEffect} from 'react'\r\nimport { TeamTile } from '../components/TeamTile'\r\nimport TeamService from '../services/TeamService'\r\nimport './HomePage.scss'\r\n\r\nexport const HomePage = () => {\r\n\r\n    const [teams,setTeams] = useState([])\r\n\r\n    useEffect(()=>{\r\n        const fetchData =async()=>{\r\n            const response = await TeamService.getAllTeamData()\r\n            const data = await response.json()\r\n            setTeams(data)\r\n        }\r\n        fetchData()\r\n\r\n        return ()=>{\r\n            setTeams([])\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"HomePage\">\r\n            <div className=\"homepage-title\">\r\n                <h1>IPL Dashboard</h1>\r\n            </div>\r\n            <div className=\"team-grid\">\r\n            {\r\n                teams.map(team=>(\r\n                    <TeamTile key={team.id} teamName={team.teamName}/>\r\n                ))\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './App.scss';\nimport { TeamPage } from './pages/TeamPage';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { MatchPage } from './pages/MatchPage';\nimport { HomePage } from './pages/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/teams/:teamName/matches/:year\" component={MatchPage} />\n          <Route path=\"/teams/:teamName\" component={TeamPage} />\n          <Route path=\"/\" component={HomePage} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}